# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: greenfield/common/approval.proto, greenfield/common/wrapper.proto
# plugin: python-betterproto
# This file has been @generated

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from dataclasses import dataclass
else:
    from pydantic.dataclasses import dataclass

import betterproto


@dataclass(eq=False, repr=False)
class Approval(betterproto.Message):
    """
    Approval is the signature information returned by the Primary Storage
    Provider (SP) to the user after allowing them to create a bucket or object,
    which is then used for verification on the chain to ensure agreement
    between the Primary SP and the user.
    """

    expired_height: int = betterproto.uint64_field(1)
    """expired_height is the block height at which the signature expires."""

    global_virtual_group_family_id: int = betterproto.uint32_field(2)
    """global_virtual_group_family_id is the family id that stored."""

    sig: bytes = betterproto.bytes_field(3)
    """The signature needs to conform to the EIP 712 specification."""


@dataclass(eq=False, repr=False)
class DoubleValue(betterproto.Message):
    """
    Wrapper message for `double`. The JSON representation for `DoubleValue` is
    JSON number.
    """

    value: float = betterproto.double_field(1)
    """The double value."""


@dataclass(eq=False, repr=False)
class FloatValue(betterproto.Message):
    """
    Wrapper message for `float`. The JSON representation for `FloatValue` is
    JSON number.
    """

    value: float = betterproto.float_field(1)
    """The float value."""


@dataclass(eq=False, repr=False)
class Int64Value(betterproto.Message):
    """
    Wrapper message for `int64`. The JSON representation for `Int64Value` is
    JSON string.
    """

    value: int = betterproto.int64_field(1)
    """The int64 value."""


@dataclass(eq=False, repr=False)
class UInt64Value(betterproto.Message):
    """
    Wrapper message for `uint64`. The JSON representation for `UInt64Value` is
    JSON string.
    """

    value: int = betterproto.uint64_field(1)
    """The uint64 value."""


@dataclass(eq=False, repr=False)
class Int32Value(betterproto.Message):
    """
    Wrapper message for `int32`. The JSON representation for `Int32Value` is
    JSON number.
    """

    value: int = betterproto.int32_field(1)
    """The int32 value."""


@dataclass(eq=False, repr=False)
class UInt32Value(betterproto.Message):
    """
    Wrapper message for `uint32`. The JSON representation for `UInt32Value` is
    JSON number.
    """

    value: int = betterproto.uint32_field(1)
    """The uint32 value."""


@dataclass(eq=False, repr=False)
class BoolValue(betterproto.Message):
    """
    Wrapper message for `bool`. The JSON representation for `BoolValue` is JSON
    `true` and `false`.
    """

    value: bool = betterproto.bool_field(1)
    """The bool value."""


@dataclass(eq=False, repr=False)
class StringValue(betterproto.Message):
    """
    Wrapper message for `string`. The JSON representation for `StringValue` is
    JSON string.
    """

    value: str = betterproto.string_field(1)
    """The string value."""


@dataclass(eq=False, repr=False)
class BytesValue(betterproto.Message):
    """
    Wrapper message for `bytes`. The JSON representation for `BytesValue` is
    JSON string.
    """

    value: bytes = betterproto.bytes_field(1)
    """The bytes value."""
