# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: tendermint/services/version/v1/version.proto, tendermint/services/version/v1/version_service.proto
# plugin: python-betterproto
# This file has been @generated
from dataclasses import dataclass
from typing import TYPE_CHECKING, Dict, Optional

import betterproto
import grpclib
from betterproto.grpc.grpclib_server import ServiceBase

if TYPE_CHECKING:
    import grpclib.server
    from betterproto.grpc.grpclib_client import MetadataLike
    from grpclib.metadata import Deadline


@dataclass(eq=False, repr=False)
class GetVersionRequest(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetVersionResponse(betterproto.Message):
    node: str = betterproto.string_field(1)
    abci: str = betterproto.string_field(2)
    p2_p: int = betterproto.uint64_field(3)
    block: int = betterproto.uint64_field(4)


class VersionServiceStub(betterproto.ServiceStub):
    async def get_version(
        self,
        get_version_request: "GetVersionRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "GetVersionResponse":
        return await self._unary_unary(
            "/tendermint.services.version.v1.VersionService/GetVersion",
            get_version_request,
            GetVersionResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )


class VersionServiceBase(ServiceBase):
    async def get_version(self, get_version_request: "GetVersionRequest") -> "GetVersionResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def __rpc_get_version(self, stream: "grpclib.server.Stream[GetVersionRequest, GetVersionResponse]") -> None:
        request = await stream.recv_message()
        response = await self.get_version(request)
        await stream.send_message(response)

    def __mapping__(self) -> Dict[str, grpclib.const.Handler]:
        return {
            "/tendermint.services.version.v1.VersionService/GetVersion": grpclib.const.Handler(
                self.__rpc_get_version,
                grpclib.const.Cardinality.UNARY_UNARY,
                GetVersionRequest,
                GetVersionResponse,
            ),
        }
